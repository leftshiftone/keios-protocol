// automatically generated by the FlatBuffers compiler, do not modify

package keios.protocol.pocketsphinx.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Guess extends Table {
  public static Guess getRootAsGuess(ByteBuffer _bb) { return getRootAsGuess(_bb, new Guess()); }
  public static Guess getRootAsGuess(ByteBuffer _bb, Guess obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Guess __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float confidence() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public String phrase() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer phraseAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer phraseInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createGuess(FlatBufferBuilder builder,
      float confidence,
      int phraseOffset) {
    builder.startObject(2);
    Guess.addPhrase(builder, phraseOffset);
    Guess.addConfidence(builder, confidence);
    return Guess.endGuess(builder);
  }

  public static void startGuess(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addConfidence(FlatBufferBuilder builder, float confidence) { builder.addFloat(0, confidence, 0.0f); }
  public static void addPhrase(FlatBufferBuilder builder, int phraseOffset) { builder.addOffset(1, phraseOffset, 0); }
  public static int endGuess(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

