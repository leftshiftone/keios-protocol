/*
 * Copyright (c) 2016-2019, Leftshift One
 * __________________
 * [2019] Leftshift One
 * All Rights Reserved.
 * NOTICE:  All information contained herein is, and remains
 * the property of Leftshift One and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Leftshift One
 * and its suppliers and may be covered by Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Leftshift One.
 */

// automatically generated by the FlatBuffers compiler, do not modify

package keios.protocol.classification.class2.flatbuffers;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Struct;

import java.nio.ByteBuffer;

@SuppressWarnings("unused")
public final class Probability extends Struct {
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Probability __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float probability1() { return bb.getFloat(bb_pos + 0); }
  public float probability2() { return bb.getFloat(bb_pos + 4); }

  public static int createProbability(FlatBufferBuilder builder, float probability1, float probability2) {
    builder.prep(4, 8);
    builder.putFloat(probability2);
    builder.putFloat(probability1);
    return builder.offset();
  }
}

