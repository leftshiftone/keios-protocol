// automatically generated by the FlatBuffers compiler, do not modify

package keios.protocol.spacy.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SpacyRequest extends Table {
  public static SpacyRequest getRootAsSpacyRequest(ByteBuffer _bb) { return getRootAsSpacyRequest(_bb, new SpacyRequest()); }
  public static SpacyRequest getRootAsSpacyRequest(ByteBuffer _bb, SpacyRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public SpacyRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String text() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer textInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public byte type(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int typeLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createSpacyRequest(FlatBufferBuilder builder,
      int textOffset,
      int typeOffset) {
    builder.startObject(2);
    SpacyRequest.addType(builder, typeOffset);
    SpacyRequest.addText(builder, textOffset);
    return SpacyRequest.endSpacyRequest(builder);
  }

  public static void startSpacyRequest(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(0, textOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(1, typeOffset, 0); }
  public static int createTypeVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startTypeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endSpacyRequest(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishSpacyRequestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedSpacyRequestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

