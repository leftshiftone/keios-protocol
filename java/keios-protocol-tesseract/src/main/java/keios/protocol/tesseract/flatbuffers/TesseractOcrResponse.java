// automatically generated by the FlatBuffers compiler, do not modify

package keios.protocol.tesseract.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TesseractOcrResponse extends Table {
  public static TesseractOcrResponse getRootAsTesseractOcrResponse(ByteBuffer _bb) { return getRootAsTesseractOcrResponse(_bb, new TesseractOcrResponse()); }
  public static TesseractOcrResponse getRootAsTesseractOcrResponse(ByteBuffer _bb, TesseractOcrResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public TesseractOcrResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String text() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer textInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long confidence() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createTesseractOcrResponse(FlatBufferBuilder builder,
      int textOffset,
      long confidence) {
    builder.startObject(2);
    TesseractOcrResponse.addConfidence(builder, confidence);
    TesseractOcrResponse.addText(builder, textOffset);
    return TesseractOcrResponse.endTesseractOcrResponse(builder);
  }

  public static void startTesseractOcrResponse(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(0, textOffset, 0); }
  public static void addConfidence(FlatBufferBuilder builder, long confidence) { builder.addInt(1, (int)confidence, (int)0L); }
  public static int endTesseractOcrResponse(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

