# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tesseract

import flatbuffers

class TesseractOcrResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsTesseractOcrResponse(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TesseractOcrResponse()
        x.Init(buf, n + offset)
        return x

    # TesseractOcrResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TesseractOcrResponse
    def Text(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TesseractOcrResponse
    def Confidence(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def TesseractOcrResponseStart(builder): builder.StartObject(2)
def TesseractOcrResponseAddText(builder, text): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(text), 0)
def TesseractOcrResponseAddConfidence(builder, confidence): builder.PrependUint32Slot(1, confidence, 0)
def TesseractOcrResponseEnd(builder): return builder.EndObject()
