# automatically generated by the FlatBuffers compiler, do not modify

# namespace: pocketsphinx

import flatbuffers

class Guess(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsGuess(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Guess()
        x.Init(buf, n + offset)
        return x

    # Guess
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Guess
    def Confidence(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # Guess
    def Phrase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def GuessStart(builder): builder.StartObject(2)
def GuessAddConfidence(builder, confidence): builder.PrependFloat32Slot(0, confidence, 0.0)
def GuessAddPhrase(builder, phrase): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(phrase), 0)
def GuessEnd(builder): return builder.EndObject()
